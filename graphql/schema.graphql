enum DownloadBucket {
  product_translation
  sku_translation
  field_translation
}

enum UploadBucket {
  brand_translation
  product_translation
  sku_translation
  collection_transl
  field_translation
  category_transl
}

type Query {
  """
  Returns a list with the translations for all categories. The translation happens during the request.
  """
  categoryTranslations(locale: String!, active: Boolean): [Category]
  """
  Returns a list with the translations for all collections. The translation happens during the request.
  """
  collectionTranslations(
    locale: String!
    active: Boolean
    xVtexTenant: String!
  ): [Collection]
  """
  Returns a list with all the categories names.
  """
  getCategoriesName: [CategoryName]
  """
  Starts the async process to get product translations given a category id and locale.
  Returns an object with the request information.
  """
  productTranslations(
    locale: String!
    categoryId: String!
  ): ProductTranslationRequest
  """
  Returns a list of IDs for requests made to download product translations. The id can be used to check the request status and download the translations.
  """
  productTranslationRequests: [String]
  """
  Returns a list of product translations related to the given requestId that were saved on VBASE.
  """
  downloadProductTranslation(requestId: String!): [Product]
  """
  Starts the async process to get the SKUs translations given a category id and locale.
  Returns an object with the request information.
  """
  skuTranslations(locale: String!, categoryId: String!): SKUTranslationRequest
  """
  Returns a list of IDs for requests made to download SKU translations. The id can be used to check the request status and download the translations.
  """
  skuTranslationRequests: [String]
  """
  Returns a list of SKU translations related to the given requestId that were saved on VBASE.
  """
  downloadSKUTranslation(requestId: String!): [SKU]
  """
  Returns a list of IDs for requests made to upload product translations.
  """
  productTranslationsUploadRequests: [String]
  """
  Returns a list of IDs for requests made to upload sku translations.
  """
  skuTranslationsUploadRequests: [String]
  """
  Returns a list of IDs for requests made to upload collection translations.
  """
  collectionTranslationsUploadRequests: [String]
  """
  Returns the upload request status for a given requestId - generated when a file is sent to be uploaded.
  """
  translationUploadRequestInfo(
    requestId: String!
    bucket: UploadBucket!
  ): UploadRequest
  """
  Returns a list with the translations for all brands. The translation happens during the request.
  """
  brandTranslations(locale: String!, active: Boolean): [Brand]
  """
  Returns a list of IDs for requests made to upload brand translations.
  """
  brandTranslationsUploadRequests: [String]
  """
  Returns a list of IDs for requests made to upload category translations.
  """
  categoryTranslationsUploadRequests: [String]
  """
  Starts the async process to translate specification field given a locale.
  Returns an object with the request information.
  """
  fieldTranslations(fields: Upload!, locale: String!): TranslationRequest
  """
  Returns a list of IDs for requests made to download specification field translations. The id can be used to check the request status and download the translations.
  """
  fieldTranslationsRequests: [String]
  """
  Returns a list of IDs for requests made to upload specification field translations.
  """
  fieldTranslationsUploadRequests: [String]
  """
  Returns a list of specification field translations related to the given requestId that were saved on VBASE.
  """
  downloadFieldTranslations(requestId: String!): [Field]
  """
  Returns status of a request made to download translations. It works for downloads that are managed async - Product, SKU and specification fields.
  """
  translationRequestInfo(
    requestId: String!
    bucket: DownloadBucket!
  ): TranslationRequest
}

type Mutation {
  uploadProductTranslations(products: Upload!, locale: String!): String
  uploadSkuTranslations(skus: Upload!, locale: String!): String
  uploadCollectionTranslations(
    collections: Upload!
    locale: String!
    xVtexTenant: String!
  ): String
  uploadBrandTranslations(brands: Upload!, locale: String!): String
  uploadFieldTranslationsImport(fields: Upload!, locale: String!): String
  uploadCategoryTranslations(categories: Upload!, locale: String!): String
}
